/*
Radix Sort
Created by gbaylis on Nov 30th 2019
*/
public class Main {
    
    public static void main(String[] args) {
        
        int[] radixArray = {90, 170, 55, 3, 6440, 2020};
        
        radixSort(radixArray, 10, 4);
        
        for (int a = 0; a < radixArray.length; a++) {
            System.out.println(radixArray[a]);
        }
    }
    
    public static void radixSort(int[] input, int radix, int width) {
        for (int a = 0; a < width; a++) {
            radixSingleSort(input, a, radix);
        }
    }
    
    public static void radixSingleSort(int[] input, int position, int radix) {
        
        int numItems = input.length;
        int[] countArray = new int[radix];
        
        for (int value: input) {
            countArray[getDigit(position, value, radix)]++;
        }
        
        for (int b = 1; b < radix; b++) {
            countArray[b] += countArray[b - 1];
        }
        
        int[] temp = new int[numItems];
        for (int tempIndex = numItems - 1; tempIndex >= 0; tempIndex--) {
            temp[--countArray[getDigit(position, input[tempIndex], radix)]] =
            input[tempIndex];
        }
        
        for (int tempIndex = 0; tempIndex < numItems; tempIndex++) {
            input[tempIndex] = temp[tempIndex];
        }
    }
    
    public static int getDigit(int position, int value, int radix) {
        return value / (int) Math.pow(radix, position) % radix;
    }
}



